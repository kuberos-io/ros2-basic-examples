apiVersion: v1
kind: ApplicationDeployment
metadata:
  name: hello-world-humble-dev
  rosVersion: humble
  appVersion: dev-1
  targetFleet: bw1-fleet
  targetRobots: ['simbot-1']
  edgeResourceGroup: ['public'] # default

rosModules:
  - name: hello-world-talker
    image: metagoto/ros2-basic-examples:v1-param
    entrypoint: ["ros2 launch examples_rclpy_minimal_publisher publisher.launch.py"]

    preference: [onboard] # Preference for scheduler

    requirements: 
      latency: 50ms
      dynamicRescheduling: false
      privilege: true
      peripheral: ['ur-robot'] 
      nvidia: false # placeholder for the future
      containerRuntime: containerd/docker # placeholder for the future

    launchParameters: # Placeholder -> Not used in this example
      # args used in the launch file
      robot_ip: {UR_ROBOT.ROBOT_IP} # hardware specific parameters -> Uppercase
      ur_type: {UR_ROBOT.UR_TYPE}
      init_topic: {launch_parameters.init_topic} # custom setup -> Lowercase 

    # To make this module reusable, you shouldn't change the rosmodule description
    # To use custom configuration, you can define your parameters in rosParameters/staticFiles section. 
    # In KubeROS Abstraction: code / configuration / file are separated!
    rosParameters: 
      - name: launch-parameters
        type: key-value
        valueFrom: minimal-publisher-params-custom
      - name: minimal-publisher-params-custom
        type: yaml
        mountPath: /workspace/minimal_publisher/config
        valueFrom: helloworld_launch_parameters    

    staticFiles: 
      - name: ml-weights-container
        requiredBindType: container 
        hostpath: /workspace/configs/ml_model_weights
        valueFrom: ml-weights-container

  - name: hello-world-listener
    image: <Container Registry>/ros2_basic_examples/hello_world:v0
    entrypoint: ["ros2 run examples_rclpy_minimal_subscriber subscriber_lambda"]

    preference: [edge, onboard] # Preference for scheduler
    requirements: 
      latency: 50ms
      dynamicRescheduling: false
      privilege: true
      nvidia: false # placeholder for the future
      containerRuntime: containerd/docker # placeholder for the future
      useBridge: false # after parser, the target cluster should be injected.
    
rosParamMap:
  # custom parameters
  - name: helloworld-launch-parameters
    type: key-value
    data:
      use_sim: false
      use_rviz: false

  - name: minimal-publisher-params_custom
    type: yaml
    path: /workspace/kuberoscli/ros_deployment/config_files_hello_world/helloworld.yml
  

staticFileMap: 
  # Placeholder, not included in this test version
  - name: ml-weights-for-mask-rcnn    
    # The file will be uploaded to the target cluster node
    bindType: container | upload | pv
    path: config_files/ml_model_weights.dummy
    hostpath: /workspace/config/weights
  - name: ml-weights-container 
    # Weights is package into a container and deployed along the rosmodule in the same pod. 
    bindType: container
    container: 
      - image: <container image address> 
        pullSecret: <name of your credential in KubeROS database> 
  - name: claimed_pv
    # decoupled storage, for using in the edge and cloud. 
    # feature with low priority. 